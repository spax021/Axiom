<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="17" hostname="DESKTOP-80S1BNG" failures="0" tests="1" name="Default test" time="5.221" errors="0" timestamp="2024-05-15T01:16:21 CEST">
  <testcase classname="api.tests.UserTest" name="@AfterMethod tearDown" time="0.0">
    <failure type="java.lang.AssertionError" message="The following asserts failed:
	expected [&amp;quot;inactive&amp;quot;] but found [&amp;quot;active&amp;quot;]">
      <![CDATA[java.lang.AssertionError: The following asserts failed:
expected ["inactive"] but found ["active"]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at api.tests.UserTest.tearDown(UserTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:802)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:778)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="api.tests.UserTest" name="updateUserStatus" time="3.682"/>
  <testcase classname="api.tests.UserTest" name="stressTestUserCreation" time="0.0">
    <ignored/>
  </testcase> <!-- stressTestUserCreation -->
  <testcase classname="api.tests.UserTest" name="accessUserWithoutAuthentication" time="0.0">
    <ignored/>
  </testcase> <!-- accessUserWithoutAuthentication -->
  <testcase classname="api.tests.UserTest" name="getNonExistingUserOrdersByUserId" time="0.0">
    <ignored/>
  </testcase> <!-- getNonExistingUserOrdersByUserId -->
  <testcase classname="api.tests.UserTest" name="accessUserByIdNotFound" time="0.0">
    <ignored/>
  </testcase> <!-- accessUserByIdNotFound -->
  <testcase classname="api.tests.UserTest" name="accessUserByIdSuccess" time="0.0">
    <ignored/>
  </testcase> <!-- accessUserByIdSuccess -->
  <testcase classname="api.tests.UserTest" name="invalidEndpointTest" time="0.0">
    <ignored/>
  </testcase> <!-- invalidEndpointTest -->
  <testcase classname="api.tests.UserTest" name="malformedJsonRequest" time="0.0">
    <ignored/>
  </testcase> <!-- malformedJsonRequest -->
  <testcase classname="api.tests.UserTest" name="createUserUnauthorised" time="0.0">
    <ignored/>
  </testcase> <!-- createUserUnauthorised -->
  <testcase classname="api.tests.UserTest" name="getUserOrdersByUserId" time="0.0">
    <ignored/>
  </testcase> <!-- getUserOrdersByUserId -->
  <testcase classname="api.tests.UserTest" name="createUserSuccess" time="0.0">
    <ignored/>
  </testcase> <!-- createUserSuccess -->
  <testcase classname="api.tests.UserTest" name="accessByIdUnauthorised" time="0.0">
    <ignored/>
  </testcase> <!-- accessByIdUnauthorised -->
  <testcase classname="api.tests.UserTest" name="accessUserByIdNegative" time="0.0">
    <ignored/>
  </testcase> <!-- accessUserByIdNegative -->
  <testcase classname="api.tests.UserTest" name="accessUserByIdZero" time="0.0">
    <ignored/>
  </testcase> <!-- accessUserByIdZero -->
  <testcase classname="api.tests.UserTest" name="createUserWithInternationalCharacters" time="0.0">
    <ignored/>
  </testcase> <!-- createUserWithInternationalCharacters -->
  <testcase classname="api.tests.UserTest" name="createUserWithInvalidEmail" time="0.0">
    <ignored/>
  </testcase> <!-- createUserWithInvalidEmail -->
  <testcase classname="api.tests.UserTest" name="createUserWithoutName" time="0.0">
    <ignored/>
  </testcase> <!-- createUserWithoutName -->
  <testcase classname="api.tests.UserTest" name="updateUserEmail" time="0.0">
    <ignored/>
  </testcase> <!-- updateUserEmail -->
</testsuite> <!-- Default test -->
